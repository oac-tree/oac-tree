Changes for 4.0.0:

- Project renamed from sequencer to oac-tree
- New instructions: 'Succeed', 'Fail'

Changes for 3.3.0:

- WaitForVariables: log unavailable variables after timeout
- Environment variable BUILD_DOCS=On will cause documentation to be build
- Provide IJob and LocalJob that use notifications based on instruction/variables indices, rather than pointers/names
- Make user input interruptable for instructions
- Changed C++ standard to C++17

Changes for 3.2.0:

- Improve output of variables in sequencer-cli
- Ensure notification of variables to UserInterface
- Create aggregate JobInterface (UserInterface + JobStateMonitor)
- Rename: JobController -> AsyncRunner
- Implement distinct interfaces for resetting and tearing down a Variable
- Enable variables to register setup/teardown functions that need to be called only once for a whole class of variables

Changes for 3.1.0:

- Added asynchronous JobController and JobStateMonitor
- Add AddMember instruction
- Add WaitForVariables instruction
- Allow relative pathnames for File variable
- Improve status reporting in ParallelSequence
- Bugfix: RegisterType does not work for included procedures (COA-623)
- Bugfix: Instruction::Reset doesn't notify UI of status update (COA-723)
- Bugfix: Array element access (COA-836)

Changes for 3.0.0:

- Documentation update
- Allow dynamically typed local variables
- Allow attributes to refer to workspace variables and literal values
- Provide instructions to copy between main and included procedures
- Make UserInterface a pure interface
- Bugfix: handle Listen instruction reset correctly (COA-461)

Changes for 2.1.0:

- Added attribute system
- Support for breakpoints
- New instructions: 'For', 'IncludeProcedure', 'UserConfirmation' and 'WaitForVariable'
- Instruction moved from epics plugin: 'Log'
- Adapt to sup-dto v1.1
- Sphinx documentation
- Catch exceptions in sequencer-cli
- Bugfix: fix nested parallel sequences (COA-441)

Changes for 2.0.1:

- Fix stdout issue with sequencer-cli (ABI compatible with 2.0.0)

Changes for 2.0.0:

- API breaking: replace old AnyValue with new one (dependency ccs-core replaced by sup-dto)
- API breaking: attribute name 'var_name' -> 'varName' (Choice and Condition instruction)
- API breaking: FileVariable: typename 'FileVariable' -> 'File', attribute 'file' -> 'fileName'
- API breaking: Procedure::PushInstruction now returns void and throws when trying to add nullptr
- API breaking: Instruction::SetupImpl returns void instead of bool and needs to throw InstructionSetupException when setup failed
- API breaking: Variable::SetupImpl returns void instead of bool and needs to throw VariableSetupException when setup failed
- Parsing procedures from XML now throws on failure with a clear message indicating the problem
- All logging (mostly used during execution of instructions) is now delegated to the UserInterface
- Added comparison and increment/decrement instructions

Changes for 1.2.0:

- Port to RHEL8
- Add notification mechanism for Variable updates and propagate this to the UserInterface
- Add halt method for Runner
- Add Message instruction that delegates to the UserInterface
- Fix multiple inputs from CLInterface (remaining whitespace)
- Add Listen decorator instruction that monitors variable updates
- Provide serialization of Procedure back to XML

Changes for 1.1.0:

- Added executable for daemon procedures
- Added Equals instruction
- Added Output instruction
- Added type registration to preamble
- More granular verbosity options for sequencer-cli
- Extend API to accomodate for GUI: insert/remove instruction, change name, ...
- Serialization of TreeData to XML
- Refactor unit tests and remove dependence to current working directory
